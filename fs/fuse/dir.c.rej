--- fs/fuse/dir.c
+++ fs/fuse/dir.c
@@ -1095,8 +1087,6 @@
 			return -EIO;
 		if (reclen > nbytes)
 			break;
-		if (memchr(dirent->name, '/', dirent->namelen) != NULL)
-			return -EIO;
 
 		over = filldir(dstbuf, dirent->name, dirent->namelen,
 			       file->f_pos, dirent->ino, dirent->type);
@@ -1340,7 +1330,6 @@
 {
 	struct inode *inode = entry->d_inode;
 	struct fuse_conn *fc = get_fuse_conn(inode);
-	struct fuse_inode *fi = get_fuse_inode(inode);
 	struct fuse_req *req;
 	struct fuse_setattr_in inarg;
 	struct fuse_attr_out outarg;
@@ -1371,10 +1360,8 @@
 	if (IS_ERR(req))
 		return PTR_ERR(req);
 
-	if (is_truncate) {
+	if (is_truncate)
 		fuse_set_nowrite(inode);
-		set_bit(FUSE_I_SIZE_UNSTABLE, &fi->state);
-	}
 
 	memset(&inarg, 0, sizeof(inarg));
 	memset(&outarg, 0, sizeof(outarg));
@@ -1436,14 +1423,12 @@
 		invalidate_inode_pages2(inode->i_mapping);
 	}
 
-	clear_bit(FUSE_I_SIZE_UNSTABLE, &fi->state);
 	return 0;
 
 error:
 	if (is_truncate)
 		fuse_release_nowrite(inode);
 
-	clear_bit(FUSE_I_SIZE_UNSTABLE, &fi->state);
 	return err;
 }
 
