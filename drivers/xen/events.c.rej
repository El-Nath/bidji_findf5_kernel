--- drivers/xen/events.c
+++ drivers/xen/events.c
@@ -1410,10 +1398,8 @@
 /* Rebind an evtchn so that it gets delivered to a specific cpu */
 static int rebind_irq_to_cpu(unsigned irq, unsigned tcpu)
 {
-	struct shared_info *s = HYPERVISOR_shared_info;
 	struct evtchn_bind_vcpu bind_vcpu;
 	int evtchn = evtchn_from_irq(irq);
-	int masked;
 
 	if (!VALID_EVTCHN(evtchn))
 		return -1;
@@ -1430,12 +1416,6 @@
 	bind_vcpu.vcpu = tcpu;
 
 	/*
-	 * Mask the event while changing the VCPU binding to prevent
-	 * it being delivered on an unexpected VCPU.
-	 */
-	masked = sync_test_and_set_bit(evtchn, s->evtchn_mask);
-
-	/*
 	 * If this fails, it usually just indicates that we're dealing with a
 	 * virq or IPI channel, which don't actually need to be rebound. Ignore
 	 * it, but don't do the xenlinux-level rebind in that case.
@@ -1443,9 +1423,6 @@
 	if (HYPERVISOR_event_channel_op(EVTCHNOP_bind_vcpu, &bind_vcpu) >= 0)
 		bind_evtchn_to_cpu(evtchn, tcpu);
 
-	if (!masked)
-		unmask_evtchn(evtchn);
-
 	return 0;
 }
 
